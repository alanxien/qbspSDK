package com.chuannuo.tangguo;


import java.util.List;

import org.json.JSONException;
import org.json.JSONObject;

import android.app.Activity;
import android.app.ActivityManager;
import android.app.ActivityManager.RunningTaskInfo;
import android.content.Context;
import android.content.Intent;
import android.content.SharedPreferences;
import android.content.SharedPreferences.Editor;
import android.content.pm.PackageInfo;
import android.content.pm.PackageManager.NameNotFoundException;
import android.os.Handler;
import android.os.Message;
import android.provider.Settings.Secure;
import android.util.Log;
import android.widget.Toast;

import com.chuannuo.tangguo.listener.AddPointListener;
import com.chuannuo.tangguo.listener.CreaterUserListener;
import com.chuannuo.tangguo.listener.GetTotalPointListener;
import com.chuannuo.tangguo.listener.ReportListener;
import com.chuannuo.tangguo.listener.ResponseStateListener;
import com.chuannuo.tangguo.listener.SpendPointListener;
import com.chuannuo.tangguo.listener.TangGuoWallListener;
import com.chuannuo.tangguo.task.AddPointTask;
import com.chuannuo.tangguo.task.CreateUserTask;
import com.chuannuo.tangguo.task.ReportTask;
import com.chuannuo.tangguo.task.SpendPointTask;

/** 
 * TODO<请描述这个类是干什么的> 
 * @author  xie.xin 
 * @data:  2015-7-1 下午10:56:32 
 * @version:  V1.0 
 */
public class TangGuoWall {
	
	private static Context context;
	private static String theme ;
	public static TangGuoWallListener tangGuoWallListener;
	private static SharedPreferences pref;
	private static String USERID;
	private static boolean isFirstIn; // 是否第一次启动
	protected static Editor editor;
	
	protected static String APPKEY;
	protected static String APPID;
	private static List<PackageInfo> paklist;

	/** 
	* @Title: initWall 
	* @Description: TODO
	* @param @param ctx
	* @param @param id
	* @return void 
	* @throws 
	*/
	public static void initWall(Context ctx,String id){
		context = ctx;
		if (null == pref) {
			pref = context.getSharedPreferences(Constant.PREF_QIANBAO_SDK,
					Context.MODE_PRIVATE);
		}
		USERID = id;
		APPKEY = PhoneInformation.getMetaData(context, Constant.TANGGUO_APPKEY);
		APPID = PhoneInformation.getMetaData(context, Constant.TANGGUO_APPID);
	}
	
	public static void init(Context ctx){
		context = ctx;
		if (null == pref) {
			pref = context.getSharedPreferences(Constant.PREF_QIANBAO_SDK,
					Context.MODE_PRIVATE);
		}
		isFirstIn = pref.getBoolean(Constant.IS_FIRST_IN, true);
		
		if(null == editor){
			editor = pref.edit();
		}
		
		APPKEY = PhoneInformation.getMetaData(context, Constant.TANGGUO_APPKEY);
		APPID = PhoneInformation.getMetaData(context, Constant.TANGGUO_APPID);
		if (isFirstIn) {
			createUser();
		} else {
			paklist = context.getPackageManager().getInstalledPackages(0);
			/*
			 * 上报手机已经安装的软件 各个应用包名用，隔开eg:
			 * cn.winads.studentsearn,cn.winads.ldbatterySteward
			 */
			reportInstalledApp();
		}
	}

	public static String getUserId(){
		return USERID;
	}

	public static void setTangGuoWallListener(TangGuoWallListener listener) {
		tangGuoWallListener = listener;
	}

	/** 
	* @Title: show 
	* @Description: TODO
	* @param 
	* @return void 
	* @throws 
	*/
	public static void show(){
		Intent intent = new Intent();
		intent.putExtra("color", theme);
		intent.setClass(context, TangGuoActivity.class);
		context.startActivity(intent);
	}
	
	/** 
	* @Title: setColor 
	* @Description: 设置主题
	* @param @param color
	* @return void 
	* @throws 
	*/
	public static void setColor(String color){
		theme = color;
	}
	
	/** 
	* @Title: getTotalPoint 
	* @Description: 获取虚拟货币总额
	* @param @return
	* @return int 
	* @throws 
	*/
	public static void getTotalPoint(final GetTotalPointListener listener){
		HttpUtil.setParams("id", pref.getString(Constant.APP_ID, "0"));
		HttpUtil.setParams("channel_id", PhoneInformation.getMetaData(context, Constant.TANGGUO_APPID));
		new SpendPointTask().execute(Constant.URL.USER_INFO_URL,new ResponseStateListener() {

			@Override
			public void onSuccess(Object result) {
				try {
					if (null != result
							&& !result
									.equals(Constant.NET_ERROR)) {
						JSONObject jsonObject;
						jsonObject = new JSONObject(result
								.toString());
						String code = jsonObject
								.getString("code");
						JSONObject data = jsonObject.getJSONObject("data");
						if (code.equals("1")) {
							
							if(null != data){
								listener.getTotalPoint(Constant.ACCESS_SUCCESS, data.getString("txt_name"),data.getInt("integral"));
							}else{
								listener.getTotalPoint(Constant.ACCESS_FAILURE,"", 0);
							}
							
						}else{
							listener.getTotalPoint(Constant.ACCESS_FAILURE,"", 0);
						}
					}else{
						listener.getTotalPoint(Constant.ACCESS_FAILURE,"", 0);
					}
				} catch (Exception e) {
					// TODO: handle exception
				}

			};
		});

	}
	
	/** 
	* @Title: spendPoint 
	* @Description: 消费虚拟货币
	* @param @param listener
	* @return void 
	* @throws 
	*/
	public static void spendPoint(final int point,final SpendPointListener listener){
		HttpUtil.setParams("appid", pref.getString(Constant.APP_ID, "0"));
		HttpUtil.setParams("code", pref.getString(Constant.CODE, "0"));
		HttpUtil.setParams("integral", point+"");
		HttpUtil.setParams("key", PhoneInformation.getMetaData(context, Constant.TANGGUO_APPKEY));
		HttpUtil.setParams("channel_id", PhoneInformation.getMetaData(context, Constant.TANGGUO_APPID));
		PhoneInformation.initTelephonyManager(context);
		HttpUtil.setParams("imei", PhoneInformation.getImei());
		HttpUtil.setParams("imsi", PhoneInformation.getImsi());
		HttpUtil.setParams("machineType", PhoneInformation.getMachineType());
		HttpUtil.setParams("net_type", PhoneInformation.getNetType()+"");
		HttpUtil.setParams("macaddress", PhoneInformation.getMacAddress());
		HttpUtil.setParams("androidid",Secure.getString(context.getContentResolver(),Secure.ANDROID_ID));
	
		new SpendPointTask().execute(Constant.URL.EXCHANGE_URL,
				new ResponseStateListener() {

					@Override
					public void onSuccess(Object result) {
						try {
							if (null != result
									&& !result
											.equals(Constant.NET_ERROR)) {
								JSONObject jsonObject;
								jsonObject = new JSONObject(result
										.toString());
								String code = jsonObject
										.getString("code");
								if (code.equals("1")) {
									listener.spendPoint(Constant.ACCESS_SUCCESS, point);
								}else{
									listener.spendPoint(Constant.ACCESS_FAILURE,point);
								}
							}else{
								listener.spendPoint(Constant.ACCESS_FAILURE,point);
							}
						} catch (Exception e) {
							// TODO: handle exception
						}

					};
				});
	}
	
	/** 
	* @Title: addPoint 
	* @Description: 客户端增加积分
	* @param @param point
	* @param @param listener
	* @return void 
	* @throws 
	*/
	public static void addPoint(final int point,final AddPointListener listener){
		HttpUtil.setParams("appid", pref.getString(Constant.APP_ID, "0"));
		HttpUtil.setParams("code", pref.getString(Constant.CODE, "0"));
		HttpUtil.setParams("integral", point+"");
		HttpUtil.setParams("key", PhoneInformation.getMetaData(context, Constant.TANGGUO_APPKEY));
		HttpUtil.setParams("channel_id", PhoneInformation.getMetaData(context, Constant.TANGGUO_APPID));
		PhoneInformation.initTelephonyManager(context);
		HttpUtil.setParams("imei", PhoneInformation.getImei());
		HttpUtil.setParams("imsi", PhoneInformation.getImsi());
		HttpUtil.setParams("machineType", PhoneInformation.getMachineType());
		HttpUtil.setParams("net_type", PhoneInformation.getNetType()+"");
		HttpUtil.setParams("macaddress", PhoneInformation.getMacAddress());
		HttpUtil.setParams("androidid",Secure.getString(context.getContentResolver(),Secure.ANDROID_ID));
	
		new AddPointTask().execute(Constant.URL.EXCHANGE_ADD_URL,
				new ResponseStateListener() {

					@Override
					public void onSuccess(Object result) {
						try {
							if (null != result
									&& !result
											.equals(Constant.NET_ERROR)) {
								JSONObject jsonObject;
								jsonObject = new JSONObject(result
										.toString());
								String code = jsonObject
										.getString("code");
								if (code.equals("1")) {
									listener.addPoint(Constant.ACCESS_SUCCESS, point);
								}else{
									listener.addPoint(Constant.ACCESS_FAILURE,point);
								}
							}else{
								listener.addPoint(Constant.ACCESS_FAILURE,point);
							}
						} catch (Exception e) {
							// TODO: handle exception
						}

					};
				});
	}
	
	private static void createUser() {

		PhoneInformation.initTelephonyManager(context);
		HttpUtil.setParams("key", TangGuoWall.APPKEY);
		HttpUtil.setParams("channel_id", TangGuoWall.APPKEY);
		HttpUtil.setParams("imei", PhoneInformation.getImei());
		HttpUtil.setParams("imsi", PhoneInformation.getImsi());
		HttpUtil.setParams("machineType", PhoneInformation.getMachineType());
		HttpUtil.setParams("os_vision", PhoneInformation.getOsVersion());
		HttpUtil.setParams("longt_latl", PhoneInformation.getLatitLongit());
		HttpUtil.setParams("resolution", ((Activity) context).getWindowManager()
				.getDefaultDisplay().getWidth()
				+ "x"
				+ ((Activity) context).getWindowManager().getDefaultDisplay()
						.getHeight());
		HttpUtil.setParams("net_type", PhoneInformation.getNetType() + "");
		HttpUtil.setParams("language", PhoneInformation.getLanguage());
		HttpUtil.setParams("macaddress", PhoneInformation.getMacAddress());
		HttpUtil.setParams("physical_size", PhoneInformation.getTotalMemory());
		HttpUtil.setParams("androidid", Secure.getString(context
				.getContentResolver(), Secure.ANDROID_ID));

		new CreateUserTask().execute(Constant.URL.CREATE_USER, new CreaterUserListener() {

			@Override
			public void onSuccess(Object result) {
				if (null != result && !result.equals(Constant.NET_ERROR)) {
					JSONObject jsonObject;
					JSONObject data;
					try {
						jsonObject = new JSONObject(result.toString());
						String code = jsonObject.getString("code");
						if (code.equals("1")) {
							data = jsonObject.getJSONObject("data");
							editor.putString(Constant.APP_ID,
									data.getString("appid"));
							editor.putString(Constant.CODE,
									data.getString("code"));
							editor.putBoolean(Constant.IS_FIRST_IN, false);
							editor.commit();

							Message msg = mHandler.obtainMessage();
							msg.what = 1;
							mHandler.sendMessage(msg);
						} else {
							Toast.makeText(context,
									jsonObject.getString("info"),
									Toast.LENGTH_SHORT).show();
						}
					} catch (JSONException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}

				} else {
					Toast.makeText(context, "获取数据失败", Toast.LENGTH_SHORT)
							.show();
				}
			}

		});
	}
	
	static Handler mHandler = new Handler() {
		public void handleMessage(Message msg) {
			switch (msg.what) {
			case 1:
				// 获取手机内所有应用
				paklist = context.getPackageManager()
						.getInstalledPackages(0);
				/*
				 * 上报手机已经安装的软件 各个应用包名用，隔开eg:
				 * cn.winads.studentsearn,cn.winads.ldbatterySteward
				 */
				reportInstalledApp();
				break;
			default:
				break;
			}
		}

	};
	
	
	/** 
	* @Title: reportInstalledApp 
	* @Description: TODO
	* @author  xie.xin
	* @param 
	* @return void 
	* @throws 
	*/
	private static void reportInstalledApp() {
		StringBuilder pakStr = new StringBuilder();
		for (int i = 0; i < paklist.size(); i++) {
			PackageInfo pak = (PackageInfo) paklist.get(i);
			// 判断是否为非系统预装的应用程序
			if ((pak.applicationInfo.flags & pak.applicationInfo.FLAG_SYSTEM) <= 0) {
				pakStr.append(pak.applicationInfo.packageName);
				pakStr.append(",");
			}
		}
		if (pakStr.length() > 0) {
			pakStr.deleteCharAt(pakStr.length() - 1);
		}
		HttpUtil.setParams("app_id", pref.getString(Constant.APP_ID, "0"));
		HttpUtil.setParams("package_names", pakStr.toString());
		new ReportTask().execute(Constant.URL.REPORT_URL, new ReportListener() {

			@Override
			public void onSuccess(Object result) {
				if (null != result && !result.equals(Constant.NET_ERROR)) {
					JSONObject jsonObject;
					try {
						jsonObject = new JSONObject(result.toString());
						String code = jsonObject.getString("code");
						if (!code.equals("1")) {
							Toast.makeText(context, "获取数据失败",
									Toast.LENGTH_SHORT).show();
						}
					} catch (Exception e) {
						Toast.makeText(context, "获取数据失败！",
								Toast.LENGTH_SHORT).show();
					}
				} else {
					Toast.makeText(context, "获取数据失败！", Toast.LENGTH_SHORT)
							.show();
				}
			}
		});
	}
}
